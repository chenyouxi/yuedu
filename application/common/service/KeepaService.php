<?php/** * Created by PhpStorm. * User: chenyouxi * Date: 2019/6/13 * Time: 9:42 AM */namespace app\common\service;use think\Controller;use Keepa\API\Request;use Keepa\API\ResponseStatus;use Keepa\helper\CSVType;use Keepa\helper\CSVTypeWrapper;use Keepa\helper\KeepaTime;use Keepa\helper\ProductAnalyzer;use Keepa\helper\ProductType;use Keepa\KeepaAPI;use Keepa\API\DealRequest;use Keepa\objects\AmazonLocale;use Keepa\objects\ProductFinderRequest;use app\common\service\BaseService as BaseService;class KeepaService extends BaseService{    protected $key;    function __construct()    {        parent::__construct();        $this->key = "1etlt37b2g958fcfu3rgid9nq1j6bnvn2la18ljrl8sj9g5a3eofgiu0349282u2";    }    /**     * @param $domainID     * @param int $offers     * @param $statsStartDate     * @param $statsEndDate     * @param int $update     * @param bool $history     * @param $asins     * @return \Keepa\objects\Product[]     * @throws \Exception 获取商品详情信息     */    public function getProduct($domainID,$offers=0,$statsStartDate,$statsEndDate,$update=0,$history=true,$asins, $rating=0){        save_log("getProduct",'keepa');        $api = new KeepaAPI($this->key);        $r = Request::getProductRequest($domainID, $offers, $statsStartDate, $statsEndDate, $update, $history, $asins, $rating);        $response = $api->sendRequestWithRetry($r);        switch ($response->status) {            case ResponseStatus::OK:                return $response->products;                break;            default:                print_r($response);        }    }    /**     * 获取商品列表     * query     * https://keepa.com/#!discuss/t/product-finder/5473     */    public function getQuery($domainID,  $selection){        save_log("getQuery",'keepa');        $api = new KeepaAPI($this->key);        $r = Request::getFinderRequest($domainID,  $selection);        $response = $api->sendRequestWithRetry($r);        switch ($response->status) {            case ResponseStatus::OK:                //获取成功返回的数据                //获取商品列表                $asinList = $response->asinList;                return $asinList;                break;            case ResponseStatus::REQUEST_FAILED:                //返回错误                result_error("getQuery", '数据错误！');                break;            default:                result_error("getQuery", '数据错误！');        }    }    /**     * 获取商家详细信息     * seller     */    public function getSellerList( $domainID,  $sellerArr ,$storefront){        save_log("getSellerList",'keepa');        $api = new KeepaAPI($this->key);        $r = Request::getSellerRequest($domainID,  $sellerArr,$storefront);        $response = $api->sendRequestWithRetry($r);        switch ($response->status) {            case ResponseStatus::OK:                //获取成功返回的数据                $sellers = $response->sellers;//返回数据字段：trackingSince（开始追踪此卖家的时间）；lastUpdate（最后更新此卖家信息的时间）；sellerId（商家的卖家ID）；SELLERNAME（卖家的名字）                //isScammer（判断该卖家是否试图欺骗用户）；hasFBA（判断卖家是否有FBA列表）；CSV（卖家的历史数据）；asinList（卖家销售的商品列表）；totalStorefrontAsins（第一个参数为最后更新时间，第二个参数为店面ASIN数量）；                return $sellers;                break;            case ResponseStatus::REQUEST_FAILED:                //返回错误                result_error(11111, '数据错误！');                break;            default:                result_error(11111, '数据错误！');        }    }    /**     * 获取所有类别或者单个类别信息     * category     * https://keepa.com/#!discuss/t/category-lookup/113     * $parents  0不包含子类别;1包含子类别     */    public function getCategoryInfo($domainID,$category,$parents=1){        save_log("getCategoryInfo",'keepa');        $api = new KeepaAPI($this->key);        $r = Request::getCategoryLookupRequest($domainID, $parents, $category);        $response = $api->sendRequestWithRetry($r);        switch ($response->status) {            case ResponseStatus::OK:                //获取成功返回的数据                $categories = $response->categories;                return $categories;                break;            default:                print_r($response);        }    }}