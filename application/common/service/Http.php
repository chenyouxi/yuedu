<?php/** * Created by PhpStorm. * User: chenyouxi * Date: 2019/7/13 * Time: 10:37 AM */namespace app\common\service;use app\common\service\GetErrorMsg as GetErrorMsg;class Http {    static public function curlGet($url, $header = array())    {        $ch = curl_init();        $headers[] = 'Accept-Charset:utf-8';        if ($header)        {            $headers = array_merge($headers, $header);        }        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);        $result = curl_exec($ch);        curl_close($ch);        return $result;    }    static public function curl_http($url, $data, $method = 'POST')    {        $ch = curl_init();        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_HEADER, 0);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);        curl_setopt($ch, CURLOPT_REFERER, $_SERVER['HTTP_HOST']);        curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36');        if ($method == 'POST')        {            curl_setopt($ch, CURLOPT_POST, 1);            curl_setopt($ch, CURLOPT_POSTFIELDS, $data);        }        $output = curl_exec($ch);        curl_close($ch);        return $output;    }    static public function curlPost($url, $data,$type='')    {        $ch = curl_init();        $headers[] = 'Accept-Charset: utf-8';        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);        if($type=='media'){            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);        } else {            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);        }        curl_setopt($ch, CURLOPT_SSLVERSION, CURL_SSLVERSION_TLSv1);        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);        curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (compatible; MSIE 5.01; Windows NT 5.0)');        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);        curl_setopt($ch, CURLOPT_AUTOREFERER, 1);        curl_setopt($ch, CURLOPT_POSTFIELDS, $data);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);        $result = curl_exec($ch);        curl_close($ch);        $result = json_decode($result, true);        if (isset($result['errcode']) && !(empty($result['errcode'])))        {            $GetErrorMsg = new GetErrorMsg();            $errmsg = $GetErrorMsg::wx_error_msg($result['errcode']);            return array('errcode' => $result['errcode'], 'errmsg' => $errmsg);        }        $result['errcode'] = 0;        return $result;    }    static public function curlDownload($remote, $local)    {        $cp = curl_init($remote);        $fp = fopen($local, 'w');        curl_setopt($cp, CURLOPT_FILE, $fp);        curl_setopt($cp, CURLOPT_HEADER, 0);        curl_exec($cp);        curl_close($cp);        fclose($fp);    }    static public function getHeaderInfo($header = '', $echo = true)    {        ob_start();        $headers = getallheaders();        if (!(empty($header)))        {            $info = $headers[$header];            echo $header . ':' . $info . "\n";        }        else        {            foreach ($headers as $key => $val )            {                echo $key . ':' . $val . "\n";            }        }        $output = ob_get_clean();        if ($echo)        {            echo nl2br($output);        }        else        {            return $output;        }    }    static public function sendHttpStatus($code)    {        static $_status = array(100 => 'Continue', 101 => 'Switching Protocols', 200 => 'OK', 201 => 'Created', 202 => 'Accepted', 203 => 'Non-Authoritative Information', 204 => 'No Content', 205 => 'Reset Content', 206 => 'Partial Content', 300 => 'Multiple Choices', 301 => 'Moved Permanently', 302 => 'Found', 303 => 'See Other', 304 => 'Not Modified', 305 => 'Use Proxy', 307 => 'Temporary Redirect', 400 => 'Bad Request', 401 => 'Unauthorized', 402 => 'Payment Required', 403 => 'Forbidden', 404 => 'Not Found', 405 => 'Method Not Allowed', 406 => 'Not Acceptable', 407 => 'Proxy Authentication Required', 408 => 'Request Timeout', 409 => 'Conflict', 410 => 'Gone', 411 => 'Length Required', 412 => 'Precondition Failed', 413 => 'Request Entity Too Large', 414 => 'Request-URI Too Long', 415 => 'Unsupported Media Type', 416 => 'Requested Range Not Satisfiable', 417 => 'Expectation Failed', 500 => 'Internal Server Error', 501 => 'Not Implemented', 502 => 'Bad Gateway', 503 => 'Service Unavailable', 504 => 'Gateway Timeout', 505 => 'HTTP Version Not Supported', 509 => 'Bandwidth Limit Exceeded');        if (isset($_status[$code]))        {            header('HTTP/1.1 ' . $code . ' ' . $_status[$code]);        }    }}