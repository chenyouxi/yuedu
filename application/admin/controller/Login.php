<?php/** * Created by PhpStorm. * User: chenyouxi * Date: 2019/7/17 * Time: 5:11 PM */namespace app\admin\controller;use think\Controller;use app\common\service\AdminService as Admin;use think\Request;use think\captcha\Captcha;use think\facade\Cache;use think\facade\Session;class Login{    protected $Login;    function __construct()    {        $this->admin = new Admin();    }    // 登录页面    public function index()    {        return view();    }    // 验证码    public function captcha(){        $captcha = new Captcha(config("captcha"));        return $captcha->entry();    }    // 校验登录    public function checkLogin(){        return $this->admin->checkLogin();    }    // 退出登录    public function logout(){        Session::delete('admin');        return redirect('login/index');    }    public function dologin()    {        $admin_name = input('post.admin_name');        $admin_password = input('post.admin_password');        // print_r($admin_name);        // die();        if( !$admin_name ){            error('请输入用户名',402);        } else if( !$admin_password ){            error('请输入密码',402);        }        $res = $this -> Login -> dologin($admin_name,$admin_password);        if ($res) {            $role = $this->role->findRole($res['role_id']);            if ($res['admin_status'] == 0)            {                error('管理员已经被禁用', 402);            }            if (empty($role))            {                return error('获取权限失败', 404);            }            else            {                $res['admin_power'] = $role['role_power'];            }            // 生成SESSION_ID            $SESSION_ID = createSessionID($res);            // SESSION_ID加在请求头随Cookie返回            header("Cookie: SESSION_ID=$SESSION_ID");            // 数组返回用户类型            // $backData['level_id']=$res['level_id'];            result($SESSION_ID);        } else {            error('用户名或密码错误',402);        }    }    public function loginout()    {        //Cache::rm($_SERVER['HTTP_AUTHORIZATION']);        Cache::clear();        result('退出成功');    }}