<?php/** * * +---------------------------------------------------------------------- *                      .::::. *                    .::::::::.            | AUTHOR: chenyouxi *                    :::::::::::           | EMAIL: 905100794@qq.com *                 ..:::::::::::'           | QQ: 905100794 *             '::::::::::::'               | WECHAT: xi20130618 *                .::::::::::               | DATETIME: 2019/8/9 4:59 PM *           '::::::::::::::.. *                ..::::::::::::. *              ``:::::::::::::::: *               ::::``:::::::::'        .:::. *              ::::'   ':::::'       .::::::::. *            .::::'      ::::     .:::::::'::::. *           .:::'       :::::  .:::::::::' ':::::. *          .::'        :::::.:::::::::'      ':::::. *         .::'         ::::::::::::::'         ``::::. *     ...:::           ::::::::::::'              ``::. *   ```` ':.          ':::::::::'                  ::::.. *                      '.:::::'                    ':'````.. * +---------------------------------------------------------------------- */namespace app\admin\controller;use app\common\model\UserTypeModel as UserType;use app\common\service\User;use app\common\model\UserModel as U;//AuthGroupServiceuse think\facade\Config;use think\Db;use think\facade\Request;use think\facade\View;class Users extends Base{    // 列表    public function index(){        //全局查询条件        $where = [];        $keyword = Request::param('keyword');        $page = Request::param('page',1);        if (!empty($keyword)) {            $where[] = ['userMobile|userEmail', 'like', '%'.$keyword.'%'];        }        $userGrade  = Request::param('userGrade');        if (!empty($userGrade)) {            $where[] = ['userGrade', '=', $userGrade];        }        $dateran = Request::param('dateran');        if (!empty($dateran)) {            $getDateran = get_dateran($dateran);            $where[] = ['regTime', 'between', $getDateran];        }        //获取列表        $this -> user = new User();        $list = $this -> user -> getList($page, $this->pageSize, $where, "userId desc",'*');        //获取用户组列表        $UsersType = UserType::select();        $view = [            'keyword'  => $keyword,            'userGrade'   => $userGrade,            'dateran'  => $dateran,            'usersType'=> $UsersType,            'pageSize' => page_size($this->pageSize, $list['total_count']),            'page'     => $page,            'list'     => $list['data'],            'empty'    => empty_list(11),        ];        View::assign($view);        return View();    }    // 删除    public function del(){        if (Request::isPost()) {            $id = Request::param('id');            U::destroy($id);            return json(['error'=>0,'msg'=>'删除成功!']);        }    }    // 批量删除    public function selectDel(){        if (Request::isPost()) {            $id = Request::param('id');            if ($id) {                $ids = explode(',',$id);                U::destroy($ids);                return json(['error'=>0, 'msg'=>'删除成功!']);            }else{                return ['error' => 1, 'msg' => '删除失败'];            }        }    }    // 状态    public function state(){        if (Request::isPost()) {            $id = Request::param('id');            if (empty($id)) {                return json(['error'=>1, 'msg'=>'用户ID不存在!']);            }            $info = U::find($id);            $userStatus = $info['userStatus'] == 1 ? -1 : 1;            $info-> userStatus = $userStatus;            $info -> save();            return json(['error'=>0, 'msg'=>'修改成功!']);        }    }    // 修改    public function edit(){        $id = Request::param('id');        $info = U::find($id);        $usersType = UserType::where('status',1)->select();        $view = [            'info'   => $info,            'usersType' => $usersType,        ];        View::assign($view);        return View('add');    }    // 修改保存    public function editPost(){        if (Request::isPost()) {            $data = Request::except(['file'], 'post');            $result = $this->validate($data,$this->validate);            if (true !== $result) {                // 验证失败 输出错误信息                $this->error($result);            } else {                if ($data['password']) {                    $data['password'] = md5($data['password']);                } else {                    unset($data['password']);                }                $result = U::where('userId',$data['userId'])->update($data);                if ($result['error']) {                    $this->error("修改失败");                } else {                    $this->success("修改成功",'index');                }            }        }    }}