<?php/** * * +---------------------------------------------------------------------- *                      .::::. *                    .::::::::.            | AUTHOR: chenyouxi *                    :::::::::::           | EMAIL: 905100794@qq.com *                 ..:::::::::::'           | QQ: 905100794 *             '::::::::::::'               | WECHAT: xi20130618 *                .::::::::::               | DATETIME: 2019/8/10 11:21 AM *           '::::::::::::::.. *                ..::::::::::::. *              ``:::::::::::::::: *               ::::``:::::::::'        .:::. *              ::::'   ':::::'       .::::::::. *            .::::'      ::::     .:::::::'::::. *           .:::'       :::::  .:::::::::' ':::::. *          .::'        :::::.:::::::::'      ':::::. *         .::'         ::::::::::::::'         ``::::. *     ...:::           ::::::::::::'              ``::. *   ```` ':.          ':::::::::'                  ::::.. *                      '.:::::'                    ':'````.. * +---------------------------------------------------------------------- */namespace app\admin\controller;use app\common\model\UserTypeModel as M;use app\common\service\UserTypeService;use think\facade\Request;use think\facade\View;class UserType extends Base{    protected $validate = 'UserType';    //列表    public function index()    {        //全局查询条件        $where = [];        $keyword = Request::param('keyword');        $page = Request::param('page',1);        if (!empty($keyword)) {            $where[] = ['name|description', 'like', '%'.$keyword.'%'];        }        $dateran = Request::param('dateran');        if (!empty($dateran)) {            $getDateran = get_dateran($dateran);            $where[]=['addTime', 'between', $getDateran];        }        //获取列表        $this -> userType = new UserTypeService();        $list = $this -> userType -> getList($page, $this->pageSize, $where, "autoId desc",'*');        $view = [            'keyword'  => $keyword,            'dateran'  => $dateran,            'pageSize' => page_size($this->pageSize, $list['total_count']),            'page'     => $page,            'list'     => $list['data'],            'empty'    => empty_list(9),        ];        View::assign($view);        return View();    }    // 添加    public function add(){        $view = [            'info' => null        ];        View::assign($view);        return View();    }    // 添加保存    public function addPost(){        $data = Request::except(['file'], 'post');        $result = $this->validate($data, $this->validate);        if (true !== $result) {            // 验证失败 输出错误信息            $this->error($result);        } else {            $result = M::insert($data);            if ($result) {                $this->success("添加成功",url('UserType/index'));            } else {                $this->error("添加失败");            }        }    }    // 修改    public function edit(){        $id = Request::param('autoId');        $info = M::find($id);        $view =[            'info' => $info        ];        View::assign($view);        return View('add');    }    // 修改保存    public function editPost(){        $data = Request::except(['file'], 'post');        $data['updateTime'] = time();        $result = $this->validate($data, $this->validate);        if (true !== $result) {            // 验证失败 输出错误信息            $this->error($result);        } else {            $result = M::where('autoId',$data['autoId'])->update($data);            if ($result) {                $this->success("修改成功",url('UserType/index'));            } else {                $this->error("修改失败");            }        }    }    // 删除    public function del(){        if (Request::isPost()) {            $id = Request::param('id');            M::destroy($id);            $this->success("删除成功",url('UserType/index'));        }    }    // 批量删除    public function selectDel(){        if (Request::isPost()) {            $id = Request::param('id');            if ($id) {                $ids = explode(',',$id);                M::destroy($ids);                $this->success("删除成功",url('UserType/index'));            }else{                $this->success("删除失败");            }        }    }    // 排序    public function sort(){        if (Request::isPost()) {            $data = Request::post();            return M::sort($data);        }    }    // 状态    public function state(){        if (Request::isPost()) {            $id = Request::param('id');            $info = M::find($id);            $info-> status = $info['status'] == 1 ? -1 : 1;            $info -> save();            $this->success("修改成功",url('UserType/index'));        }    }}