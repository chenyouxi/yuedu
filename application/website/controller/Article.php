<?php/** * Created by PhpStorm. * User: chenyouxi * Date: 2019/6/11 * Time: 10:30 AM */namespace app\website\controller;use think\Controller;use think\Db;use think\facade\Cache;use think\facade\Session;use app\common\service\User;use app\common\service\ArticleService;use app\common\service\ArticleCategoryService;class Article extends BaseController{    public function __construct() {        parent::__construct();        $this->article = new ArticleService();        $this->article_category = new ArticleCategoryService();        $categoryList = $this->article_category->getList(1, 100, ["status"=>1], "autoId desc",'arr');        foreach( $categoryList as $key =>&$val ){//            $data = $this->article->getList(1, 100, ["categoryId"=>$val['autoId'],'isDel'=>0], "autoId desc",'*');//            $data = json_decode( json_encode($data) ,true);//            $val['articleList'] = $data['data'];            $val['count'] = $this->article->getCount(["categoryId"=>$val['autoId'],'isDel'=>0]);        }        $this->assign('page_count', 1);        $this->assign('total_count', 1);        $this->assign('page', 1);        $this->assign('page_num', 1);        $this->assign("categoryList" , empty($categoryList) ? null : $categoryList );    }    public function index(){        //$articleList = json_decode( json_encode($articleList) ,true);        $cid = request()->get('cid');        $page = request()->get('page', '1');        $page_size = request()->get('page_size', '10');        if( request()->isAjax() ){            $condition = [];            $condition['isDel'] = 0;            if( $cid ){                $condition['categoryId'] = $cid;            }            //$categoryInfo = $this->article_category->getView($condition, 'category_name');            //$articleList = $this->article->getList($page, 10, $condition, "autoId desc",'*');            $list = Db::name('article')                ->alias("a")                ->join('article_category c', 'a.categoryId = c.autoId')                ->field('a.autoId,a.title,a.content,a.addTime,c.category_name,c.status,a.updateTime,a.categoryId')                ->where($condition)                ->limit(($page-1)*$page_size,$page_size)                ->select();            $count = Db::name('article')->where($condition)->count();            if ($count % $page_size == 0) {                $page_count = $count / $page_size;            } else {                $page_count = (int) ($count / $page_size) + 1;            }            $articleList = array(                'data' => $list,                'total_count' => $count,                'page_count' => $page_count            );            foreach($articleList['data'] as $key => &$value){                $content =  preg_replace("/<img.*?>/si","",$value['content']);                $content = trim($content,'\0');                $content = substr( strip_tags($content), 0, 200 );                $content = htmlspecialchars($content);                $value['content'] = $content."...";            }            if( $cid ) {                $articleList['categoryName'] = $articleList['data'][0]['category_name'];            } else {                $articleList['categoryName'] = '帮助中心';            }            result_success($articleList,"success");        }        $title = "91AMZ 简单选品 选品简单 -- 帮助中心";        return view('list',compact('title','cid','page'));    }    public function  view(){        $aid = request()->get('aid');        $cid = request()->get('cid');        if(!$aid)            $this->error("参数错误","/website/article");        $condition = '';        if( $cid ){            $condition = "categoryId =".$cid;        }        $data = Db::name('article')            ->alias("a")            ->join('article_category c', 'a.categoryId = c.autoId')            ->field('a.autoId,a.title,a.content,a.addTime,c.category_name,c.status,a.updateTime,a.categoryId')            ->where(["a.autoId"=>$aid,'isDel'=>0])            ->where(['c.status'=>1])            ->where($condition)            ->find();        //下一篇        $next = Db::name('article')            ->alias("a")            ->join('article_category c', 'a.categoryId = c.autoId')            ->field('a.autoId,a.title,a.content,a.addTime,c.category_name,c.status,a.updateTime')            ->where(" a.autoId < $aid and isDel =0")            ->where(['c.status'=>1])            ->where($condition)            ->order("autoId asc")            ->limit('1')            ->find();        //上一篇  $front=M('article')->where("id>".$id)->order('id asc')->limit('1')->find();        $pre = Db::name('article')            ->alias("a")            ->join('article_category c', 'a.categoryId = c.autoId')            ->field('a.autoId,a.title,a.content,a.addTime,c.category_name,c.status,a.updateTime')            ->where(" a.autoId > $aid and isDel =0")            ->where(['c.status'=>1])            ->where($condition)            ->order("autoId asc")            ->limit('1')            ->find();        $title = "91AMZ 简单选品 选品简单 -- 文章";        return view('view',compact('title','data','cid','next','pre'));    }}?>