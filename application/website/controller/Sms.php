<?php/** * Created by PhpStorm. * User: chenyouxi * Date: 2019/5/28 * Time: 11:00 AM */namespace app\website\controller;use think\Controller;use think\facade\Session;use think\Cookie;use think\Request;use app\common\service\Config as WebConfig;use app\common\service\User;/** * 前台用户登录 * * @author Administrator * */class Sms extends BaseController{    public function __construct()    {        parent::__construct();        $this->user = new User();    }    public function index(){        $type = request()->post('type', '');        $mobile = request()->post('mobile', '');        //校验参数        if(!$type || !$mobile){            result_error(11111, '参数错误！');        }        //校验手机号发送间隔时间        $codeMoileSession = Session::get("codeMobile");        if( ($codeMoileSession['verify_time'] + 60 ) > time() && isset($codeMoileSession['verify_time'])){            result_error(11111, '您发送的手机验证码过于频繁，请稍后再试！');        }        //生成6位数的验证码        $rand = rand(100000,999999);        if( $type == 'register' ){            //校验密文是否正确            $lockSession = request()->post('lock', '');            $regSession = Session::get("regSession");            if(unlock_url($lockSession) != $regSession || !$regSession){                result_error(11111, '校验错误！');            }            //注册            if (! $this->user->mobileIsRegister($mobile)) {                //验证用户手机号是否已经注册                $content = rawurlencode("您的手机号：".$mobile."，注册验证码：".$rand."，请不要把验证码泄露给其他人。如非本人操作，可不用理会！");            } else {                result_error(11111, '手机号已注册');            }        } else if ( $type == 'findPasswd' ){            //找回密码            $content = rawurlencode("您的手机号：".$mobile."，找回密码验证码：".$rand."，请不要把验证码泄露给其他人。如非本人操作，可不用理会！");        } else if( $type == 'verify' ){            //发送验证码            $content = rawurlencode("您的验证码是：".$rand."。请不要把验证码泄露给其他人。如非本人操作，可不用理会！");        } else if( $type == 'savePassword' ){            if($mobile != $this->userMobile){                result_error(11111, '填写的手机未绑定该账号！');            }            $content = rawurlencode("您的验证码是：".$rand."。请不要把验证码泄露给其他人。如非本人操作，可不用理会！");        } else if ( $type == "perfect" ){            //完善用户信息            if (! $this->user->mobileIsRegister($mobile)) {                $content = rawurlencode("您的验证码是：".$rand."。请不要把验证码泄露给其他人。如非本人操作，可不用理会！");            } else {                result_error(11111, '手机号已注册');            }        } else if ( $type == "bindMobile" ){            //绑定用户已有帐号            if ($this->user->mobileIsRegister($mobile)) {                $content = rawurlencode("您的验证码是：".$rand."。请不要把验证码泄露给其他人。如非本人操作，可不用理会！");            } else {                result_error(11111, '手机号未注册');            }        }        save_log("mobile:". $mobile .";verify:". $rand.";type:".$type,'sendSms');        $res = $this->sendSms($mobile,$content);        if( $res == 100 ){            //短信发送成功，存储验证码            $secode                = [];            $secode['verify_code'] = $rand; // 把校验码保存到session            $secode['verify_time'] = time(); // 验证码创建时间            $secode['verify_type'] = $type;            $secode['verify_mobile'] = $mobile;            Session::set("codeMobile", $secode, '');            result_success("","短信发送成功");        } else if ( $res == 101 ){            result_error(11111, '短信发送验证失败');        } else if ( $res == 102 ){            result_error(11111, '手机号码格式不正确');        } else if ( $res == 103 ){            result_error(11111, '会员级别不够');        } else if ( $res == 104 ){            result_error(11111, '内容未审核');        } else if ( $res == 105 ){            result_error(11111, '内容过多');        } else if ( $res == 106 ){            result_error(11111, '账户余额不足');        } else if ( $res == 107 ){            result_error(11111, 'Ip受限');        } else if ( $res == 108 ){            result_error(11111, '手机号码发送太频繁，请换号或隔天再发');        } else if ( $res == 109 ){            result_error(11111, '帐号被锁定');        } else if ( $res == 110 ){            result_error(11111, '手机号发送频率持续过高，黑名单屏蔽数日');        } else if ( $res == 120 ){            result_error(11111, '系统升级');        }    }    //发送短信验证码    public function sendSms($mobile,$content){        header("Content-Type: text/html; charset=utf-8");        $target = "http://sms.106jiekou.com/utf8/sms.aspx";        $account = "seocharm";        $password = "aoshid002";        $signName = '91amz';        $post_data = "account=".$account."&password=".$password."&mobile=".$mobile."&content=".$content."&signName=".$signName;        $gets = post($post_data, $target);        return $gets;    }}