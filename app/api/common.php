<?phpuse app\common\model\Users;use think\facade\Cache as Cache;/** * * +---------------------------------------------------------------------- *                      .::::. *                    .::::::::.            | AUTHOR: chenyouxi *                    :::::::::::           | EMAIL: 905100794@qq.com *                 ..:::::::::::'           | QQ: 905100794 *             '::::::::::::'               | WECHAT: xi20130618 *                .::::::::::               | DATETIME: 2019/9/14 2:14 下午 *           '::::::::::::::.. *                ..::::::::::::. *              ``:::::::::::::::: *               ::::``:::::::::'        .:::. *              ::::'   ':::::'       .::::::::. *            .::::'      ::::     .:::::::'::::. *           .:::'       :::::  .:::::::::' ':::::. *          .::'        :::::.:::::::::'      ':::::. *         .::'         ::::::::::::::'         ``::::. *     ...:::           ::::::::::::'              ``::. *   ```` ':.          ':::::::::'                  ::::.. *                      '.:::::'                    ':'````.. * +---------------------------------------------------------------------- *//* * 生成uuid */function uuid(){    if (function_exists('com_create_guid')) {        return com_create_guid();    } else {        mt_srand((double)microtime() * 10000);//optional for php 4.2.0 and up.        $charid = strtoupper(md5(uniqid(rand(), true)));        $hyphen = chr(45);// "-"        $uuid = chr(123)// "{"            . substr($charid, 0, 8) . $hyphen            . substr($charid, 8, 4) . $hyphen            . substr($charid, 12, 4) . $hyphen            . substr($charid, 16, 4) . $hyphen            . substr($charid, 20, 12)            . chr(125);// "}"        return $uuid;    }}/* * 生成登录态，返回SESSION_ID */function createSessionID($DB_user_message_array){    // 缓存保存信息    $data['user_id'] = $DB_user_message_array['id'];    $data['mobile'] = $DB_user_message_array['mobile'];    $SESSION_ID = uuid();    //把sessionid存入数据库    $lockSession = lock_url($SESSION_ID);    Users::update(['session_id' => $lockSession], ['id' => $data['user_id']]);    // 设置过期时间5小时    return Cache::set($SESSION_ID, $data, 5000 * 3600) ? $SESSION_ID : false;}function lock_url($txt, $key = 'lock.lock'){    $txt = $txt . $key;    $chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-=+";    $nh = rand(0, 64);    $ch = $chars[$nh];    $mdKey = md5($key . $ch);    $mdKey = substr($mdKey, $nh % 8, $nh % 8 + 7);    $txt = base64_encode($txt);    $tmp = '';    $i = 0;    $j = 0;    $k = 0;    for ($i = 0; $i < strlen($txt); $i++) {        $k = $k == strlen($mdKey) ? 0 : $k;        $j = ($nh + strpos($chars, $txt[$i]) + ord($mdKey[$k++])) % 64;        $tmp .= $chars[$j];    }    return urlencode(base64_encode($ch . $tmp));}function unlock_url($txt, $key = 'lock.lock'){    $txt = base64_decode(urldecode($txt));    $chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-=+";    $ch = $txt[0];    $nh = strpos($chars, $ch);    $mdKey = md5($key . $ch);    $mdKey = substr($mdKey, $nh % 8, $nh % 8 + 7);    $txt = substr($txt, 1);    $tmp = '';    $i = 0;    $j = 0;    $k = 0;    for ($i = 0; $i < strlen($txt); $i++) {        $k = $k == strlen($mdKey) ? 0 : $k;        $j = strpos($chars, $txt[$i]) - $nh - ord($mdKey[$k++]);        while ($j < 0) $j += 64;        $tmp .= $chars[$j];    }    return trim(base64_decode($tmp), $key);}